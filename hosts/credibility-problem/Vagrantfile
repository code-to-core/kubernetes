Vagrant.configure("2") do |c|
    c.vm.box = "bento/ubuntu-16.04"
    c.vm.hostname = "serious-callers-only"

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    c.vm.network "public_network", type: "dhcp", :bridge => 'wlan0'
    c.vm.network "forwarded_port", guest: 6443, host: 6443

    c.vm.provider :virtualbox do |vb|
        vb.customize [
            'modifyvm', :id,
            '--natdnshostresolver1', 'on',
            '--memory', '2048',
            '--cpus', '2'
         ]
    end

    # Provision Docker on the VM
    c.vm.provision "docker" do |d|
    end

    # The next steps will install kubeadm, kubelet and kubectl
    c.vm.provision :shell,
    inline: "apt-get update && apt-get install -y apt-transport-https",
    privileged: true

    c.vm.provision :shell,
    inline: "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -",
    privileged: true

    c.vm.provision :shell,
    inline: "echo deb http://apt.kubernetes.io/ kubernetes-xenial main > /etc/apt/sources.list.d/kubernetes.list",
    privileged: true

    c.vm.provision :shell,
    inline: "apt-get update",
    privileged: true

    c.vm.provision :shell,
    inline: "apt-get install -y kubelet kubeadm kubectl",
    privileged: true

    c.vm.provision :shell,
    inline: "swapoff -a",
    privileged: true

    c.vm.provision :shell,
    inline: "sysctl net.bridge.bridge-nf-call-iptables=1",
    privileged: true

    c.vm.provision :shell,
    inline: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml",
    privileged: true

end
